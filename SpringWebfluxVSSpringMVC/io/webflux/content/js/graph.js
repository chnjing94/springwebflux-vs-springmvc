/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 7129.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 3.0], [0.6, 4.0], [0.7, 5.0], [0.8, 5.0], [0.9, 6.0], [1.0, 7.0], [1.1, 8.0], [1.2, 8.0], [1.3, 9.0], [1.4, 9.0], [1.5, 10.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 12.0], [2.0, 12.0], [2.1, 13.0], [2.2, 13.0], [2.3, 14.0], [2.4, 14.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 16.0], [2.9, 16.0], [3.0, 16.0], [3.1, 17.0], [3.2, 17.0], [3.3, 17.0], [3.4, 17.0], [3.5, 18.0], [3.6, 18.0], [3.7, 18.0], [3.8, 18.0], [3.9, 18.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 19.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 21.0], [5.1, 21.0], [5.2, 21.0], [5.3, 21.0], [5.4, 21.0], [5.5, 22.0], [5.6, 22.0], [5.7, 22.0], [5.8, 22.0], [5.9, 22.0], [6.0, 22.0], [6.1, 22.0], [6.2, 23.0], [6.3, 23.0], [6.4, 23.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 24.0], [7.1, 24.0], [7.2, 24.0], [7.3, 24.0], [7.4, 24.0], [7.5, 24.0], [7.6, 24.0], [7.7, 24.0], [7.8, 24.0], [7.9, 25.0], [8.0, 25.0], [8.1, 25.0], [8.2, 25.0], [8.3, 25.0], [8.4, 25.0], [8.5, 25.0], [8.6, 25.0], [8.7, 26.0], [8.8, 26.0], [8.9, 26.0], [9.0, 26.0], [9.1, 26.0], [9.2, 26.0], [9.3, 26.0], [9.4, 26.0], [9.5, 26.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 27.0], [10.4, 28.0], [10.5, 28.0], [10.6, 28.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 29.0], [11.1, 29.0], [11.2, 29.0], [11.3, 29.0], [11.4, 29.0], [11.5, 29.0], [11.6, 29.0], [11.7, 29.0], [11.8, 30.0], [11.9, 30.0], [12.0, 30.0], [12.1, 30.0], [12.2, 30.0], [12.3, 30.0], [12.4, 30.0], [12.5, 30.0], [12.6, 30.0], [12.7, 31.0], [12.8, 31.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 31.0], [13.5, 31.0], [13.6, 31.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 32.0], [14.2, 32.0], [14.3, 32.0], [14.4, 32.0], [14.5, 32.0], [14.6, 32.0], [14.7, 33.0], [14.8, 33.0], [14.9, 33.0], [15.0, 33.0], [15.1, 33.0], [15.2, 33.0], [15.3, 33.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 34.0], [15.8, 34.0], [15.9, 34.0], [16.0, 34.0], [16.1, 34.0], [16.2, 34.0], [16.3, 34.0], [16.4, 34.0], [16.5, 34.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 35.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 36.0], [18.2, 36.0], [18.3, 36.0], [18.4, 36.0], [18.5, 36.0], [18.6, 36.0], [18.7, 36.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 36.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 37.0], [19.7, 37.0], [19.8, 37.0], [19.9, 37.0], [20.0, 37.0], [20.1, 37.0], [20.2, 37.0], [20.3, 37.0], [20.4, 37.0], [20.5, 37.0], [20.6, 37.0], [20.7, 37.0], [20.8, 37.0], [20.9, 37.0], [21.0, 37.0], [21.1, 37.0], [21.2, 38.0], [21.3, 38.0], [21.4, 38.0], [21.5, 38.0], [21.6, 38.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 38.0], [22.8, 38.0], [22.9, 38.0], [23.0, 38.0], [23.1, 38.0], [23.2, 39.0], [23.3, 39.0], [23.4, 39.0], [23.5, 39.0], [23.6, 39.0], [23.7, 39.0], [23.8, 39.0], [23.9, 39.0], [24.0, 39.0], [24.1, 39.0], [24.2, 39.0], [24.3, 39.0], [24.4, 39.0], [24.5, 39.0], [24.6, 39.0], [24.7, 39.0], [24.8, 39.0], [24.9, 39.0], [25.0, 39.0], [25.1, 39.0], [25.2, 39.0], [25.3, 39.0], [25.4, 39.0], [25.5, 39.0], [25.6, 40.0], [25.7, 40.0], [25.8, 40.0], [25.9, 40.0], [26.0, 40.0], [26.1, 40.0], [26.2, 40.0], [26.3, 40.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 40.0], [26.8, 40.0], [26.9, 40.0], [27.0, 40.0], [27.1, 40.0], [27.2, 40.0], [27.3, 40.0], [27.4, 40.0], [27.5, 40.0], [27.6, 40.0], [27.7, 40.0], [27.8, 40.0], [27.9, 40.0], [28.0, 40.0], [28.1, 41.0], [28.2, 41.0], [28.3, 41.0], [28.4, 41.0], [28.5, 41.0], [28.6, 41.0], [28.7, 41.0], [28.8, 41.0], [28.9, 41.0], [29.0, 41.0], [29.1, 41.0], [29.2, 41.0], [29.3, 41.0], [29.4, 41.0], [29.5, 41.0], [29.6, 41.0], [29.7, 41.0], [29.8, 41.0], [29.9, 41.0], [30.0, 41.0], [30.1, 41.0], [30.2, 41.0], [30.3, 41.0], [30.4, 41.0], [30.5, 41.0], [30.6, 41.0], [30.7, 41.0], [30.8, 41.0], [30.9, 42.0], [31.0, 42.0], [31.1, 42.0], [31.2, 42.0], [31.3, 42.0], [31.4, 42.0], [31.5, 42.0], [31.6, 42.0], [31.7, 42.0], [31.8, 42.0], [31.9, 42.0], [32.0, 42.0], [32.1, 42.0], [32.2, 42.0], [32.3, 42.0], [32.4, 42.0], [32.5, 42.0], [32.6, 42.0], [32.7, 42.0], [32.8, 42.0], [32.9, 42.0], [33.0, 42.0], [33.1, 42.0], [33.2, 42.0], [33.3, 42.0], [33.4, 42.0], [33.5, 42.0], [33.6, 42.0], [33.7, 42.0], [33.8, 42.0], [33.9, 42.0], [34.0, 43.0], [34.1, 43.0], [34.2, 43.0], [34.3, 43.0], [34.4, 43.0], [34.5, 43.0], [34.6, 43.0], [34.7, 43.0], [34.8, 43.0], [34.9, 43.0], [35.0, 43.0], [35.1, 43.0], [35.2, 43.0], [35.3, 43.0], [35.4, 43.0], [35.5, 43.0], [35.6, 43.0], [35.7, 43.0], [35.8, 43.0], [35.9, 43.0], [36.0, 43.0], [36.1, 43.0], [36.2, 43.0], [36.3, 43.0], [36.4, 43.0], [36.5, 43.0], [36.6, 43.0], [36.7, 43.0], [36.8, 43.0], [36.9, 43.0], [37.0, 44.0], [37.1, 44.0], [37.2, 44.0], [37.3, 44.0], [37.4, 44.0], [37.5, 44.0], [37.6, 44.0], [37.7, 44.0], [37.8, 44.0], [37.9, 44.0], [38.0, 44.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 44.0], [38.5, 44.0], [38.6, 44.0], [38.7, 44.0], [38.8, 44.0], [38.9, 44.0], [39.0, 44.0], [39.1, 44.0], [39.2, 44.0], [39.3, 44.0], [39.4, 44.0], [39.5, 44.0], [39.6, 44.0], [39.7, 45.0], [39.8, 45.0], [39.9, 45.0], [40.0, 45.0], [40.1, 45.0], [40.2, 45.0], [40.3, 45.0], [40.4, 45.0], [40.5, 45.0], [40.6, 45.0], [40.7, 45.0], [40.8, 45.0], [40.9, 45.0], [41.0, 45.0], [41.1, 45.0], [41.2, 45.0], [41.3, 45.0], [41.4, 45.0], [41.5, 45.0], [41.6, 45.0], [41.7, 45.0], [41.8, 45.0], [41.9, 45.0], [42.0, 45.0], [42.1, 45.0], [42.2, 45.0], [42.3, 45.0], [42.4, 45.0], [42.5, 46.0], [42.6, 46.0], [42.7, 46.0], [42.8, 46.0], [42.9, 46.0], [43.0, 46.0], [43.1, 46.0], [43.2, 46.0], [43.3, 46.0], [43.4, 46.0], [43.5, 46.0], [43.6, 46.0], [43.7, 46.0], [43.8, 46.0], [43.9, 46.0], [44.0, 46.0], [44.1, 46.0], [44.2, 46.0], [44.3, 46.0], [44.4, 46.0], [44.5, 46.0], [44.6, 46.0], [44.7, 46.0], [44.8, 46.0], [44.9, 46.0], [45.0, 46.0], [45.1, 46.0], [45.2, 47.0], [45.3, 47.0], [45.4, 47.0], [45.5, 47.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 47.0], [46.1, 47.0], [46.2, 47.0], [46.3, 47.0], [46.4, 47.0], [46.5, 47.0], [46.6, 47.0], [46.7, 47.0], [46.8, 47.0], [46.9, 47.0], [47.0, 47.0], [47.1, 47.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 48.0], [48.0, 48.0], [48.1, 48.0], [48.2, 48.0], [48.3, 48.0], [48.4, 48.0], [48.5, 48.0], [48.6, 48.0], [48.7, 48.0], [48.8, 48.0], [48.9, 48.0], [49.0, 48.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 48.0], [49.7, 48.0], [49.8, 48.0], [49.9, 48.0], [50.0, 48.0], [50.1, 48.0], [50.2, 49.0], [50.3, 49.0], [50.4, 49.0], [50.5, 49.0], [50.6, 49.0], [50.7, 49.0], [50.8, 49.0], [50.9, 49.0], [51.0, 49.0], [51.1, 49.0], [51.2, 49.0], [51.3, 49.0], [51.4, 49.0], [51.5, 49.0], [51.6, 49.0], [51.7, 49.0], [51.8, 49.0], [51.9, 49.0], [52.0, 49.0], [52.1, 49.0], [52.2, 49.0], [52.3, 49.0], [52.4, 50.0], [52.5, 50.0], [52.6, 50.0], [52.7, 50.0], [52.8, 50.0], [52.9, 50.0], [53.0, 50.0], [53.1, 50.0], [53.2, 50.0], [53.3, 50.0], [53.4, 50.0], [53.5, 50.0], [53.6, 50.0], [53.7, 50.0], [53.8, 50.0], [53.9, 50.0], [54.0, 50.0], [54.1, 50.0], [54.2, 50.0], [54.3, 51.0], [54.4, 51.0], [54.5, 51.0], [54.6, 51.0], [54.7, 51.0], [54.8, 51.0], [54.9, 51.0], [55.0, 51.0], [55.1, 51.0], [55.2, 51.0], [55.3, 51.0], [55.4, 51.0], [55.5, 51.0], [55.6, 51.0], [55.7, 51.0], [55.8, 51.0], [55.9, 51.0], [56.0, 52.0], [56.1, 52.0], [56.2, 52.0], [56.3, 52.0], [56.4, 52.0], [56.5, 52.0], [56.6, 52.0], [56.7, 52.0], [56.8, 52.0], [56.9, 52.0], [57.0, 52.0], [57.1, 52.0], [57.2, 52.0], [57.3, 52.0], [57.4, 52.0], [57.5, 52.0], [57.6, 52.0], [57.7, 52.0], [57.8, 53.0], [57.9, 53.0], [58.0, 53.0], [58.1, 53.0], [58.2, 53.0], [58.3, 53.0], [58.4, 53.0], [58.5, 53.0], [58.6, 53.0], [58.7, 53.0], [58.8, 53.0], [58.9, 53.0], [59.0, 53.0], [59.1, 53.0], [59.2, 53.0], [59.3, 54.0], [59.4, 54.0], [59.5, 54.0], [59.6, 54.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 55.0], [61.0, 55.0], [61.1, 55.0], [61.2, 55.0], [61.3, 55.0], [61.4, 55.0], [61.5, 55.0], [61.6, 55.0], [61.7, 55.0], [61.8, 55.0], [61.9, 55.0], [62.0, 55.0], [62.1, 56.0], [62.2, 56.0], [62.3, 56.0], [62.4, 56.0], [62.5, 56.0], [62.6, 56.0], [62.7, 56.0], [62.8, 56.0], [62.9, 56.0], [63.0, 56.0], [63.1, 56.0], [63.2, 56.0], [63.3, 56.0], [63.4, 57.0], [63.5, 57.0], [63.6, 57.0], [63.7, 57.0], [63.8, 57.0], [63.9, 57.0], [64.0, 57.0], [64.1, 57.0], [64.2, 57.0], [64.3, 57.0], [64.4, 57.0], [64.5, 57.0], [64.6, 58.0], [64.7, 58.0], [64.8, 58.0], [64.9, 58.0], [65.0, 58.0], [65.1, 58.0], [65.2, 58.0], [65.3, 58.0], [65.4, 58.0], [65.5, 58.0], [65.6, 58.0], [65.7, 59.0], [65.8, 59.0], [65.9, 59.0], [66.0, 59.0], [66.1, 59.0], [66.2, 59.0], [66.3, 59.0], [66.4, 59.0], [66.5, 59.0], [66.6, 59.0], [66.7, 59.0], [66.8, 60.0], [66.9, 60.0], [67.0, 60.0], [67.1, 60.0], [67.2, 60.0], [67.3, 60.0], [67.4, 60.0], [67.5, 60.0], [67.6, 60.0], [67.7, 60.0], [67.8, 61.0], [67.9, 61.0], [68.0, 61.0], [68.1, 61.0], [68.2, 61.0], [68.3, 61.0], [68.4, 61.0], [68.5, 61.0], [68.6, 61.0], [68.7, 62.0], [68.8, 62.0], [68.9, 62.0], [69.0, 62.0], [69.1, 62.0], [69.2, 62.0], [69.3, 62.0], [69.4, 62.0], [69.5, 62.0], [69.6, 63.0], [69.7, 63.0], [69.8, 63.0], [69.9, 63.0], [70.0, 63.0], [70.1, 63.0], [70.2, 63.0], [70.3, 63.0], [70.4, 63.0], [70.5, 64.0], [70.6, 64.0], [70.7, 64.0], [70.8, 64.0], [70.9, 64.0], [71.0, 64.0], [71.1, 64.0], [71.2, 64.0], [71.3, 65.0], [71.4, 65.0], [71.5, 65.0], [71.6, 65.0], [71.7, 65.0], [71.8, 65.0], [71.9, 65.0], [72.0, 65.0], [72.1, 66.0], [72.2, 66.0], [72.3, 66.0], [72.4, 66.0], [72.5, 66.0], [72.6, 66.0], [72.7, 66.0], [72.8, 66.0], [72.9, 67.0], [73.0, 67.0], [73.1, 67.0], [73.2, 67.0], [73.3, 67.0], [73.4, 67.0], [73.5, 67.0], [73.6, 67.0], [73.7, 68.0], [73.8, 68.0], [73.9, 68.0], [74.0, 68.0], [74.1, 68.0], [74.2, 68.0], [74.3, 68.0], [74.4, 69.0], [74.5, 69.0], [74.6, 69.0], [74.7, 69.0], [74.8, 69.0], [74.9, 69.0], [75.0, 70.0], [75.1, 70.0], [75.2, 70.0], [75.3, 70.0], [75.4, 70.0], [75.5, 70.0], [75.6, 71.0], [75.7, 71.0], [75.8, 71.0], [75.9, 71.0], [76.0, 71.0], [76.1, 71.0], [76.2, 72.0], [76.3, 72.0], [76.4, 72.0], [76.5, 73.0], [76.6, 73.0], [76.7, 73.0], [76.8, 73.0], [76.9, 73.0], [77.0, 74.0], [77.1, 74.0], [77.2, 74.0], [77.3, 74.0], [77.4, 75.0], [77.5, 75.0], [77.6, 75.0], [77.7, 75.0], [77.8, 76.0], [77.9, 76.0], [78.0, 76.0], [78.1, 76.0], [78.2, 76.0], [78.3, 77.0], [78.4, 77.0], [78.5, 77.0], [78.6, 77.0], [78.7, 77.0], [78.8, 77.0], [78.9, 78.0], [79.0, 78.0], [79.1, 78.0], [79.2, 78.0], [79.3, 78.0], [79.4, 78.0], [79.5, 79.0], [79.6, 79.0], [79.7, 79.0], [79.8, 79.0], [79.9, 80.0], [80.0, 80.0], [80.1, 80.0], [80.2, 81.0], [80.3, 81.0], [80.4, 81.0], [80.5, 82.0], [80.6, 82.0], [80.7, 82.0], [80.8, 82.0], [80.9, 83.0], [81.0, 83.0], [81.1, 83.0], [81.2, 84.0], [81.3, 84.0], [81.4, 84.0], [81.5, 84.0], [81.6, 84.0], [81.7, 85.0], [81.8, 85.0], [81.9, 85.0], [82.0, 85.0], [82.1, 86.0], [82.2, 86.0], [82.3, 86.0], [82.4, 86.0], [82.5, 87.0], [82.6, 87.0], [82.7, 87.0], [82.8, 88.0], [82.9, 88.0], [83.0, 88.0], [83.1, 88.0], [83.2, 88.0], [83.3, 89.0], [83.4, 89.0], [83.5, 89.0], [83.6, 89.0], [83.7, 90.0], [83.8, 90.0], [83.9, 90.0], [84.0, 90.0], [84.1, 91.0], [84.2, 91.0], [84.3, 91.0], [84.4, 92.0], [84.5, 92.0], [84.6, 92.0], [84.7, 93.0], [84.8, 93.0], [84.9, 94.0], [85.0, 94.0], [85.1, 95.0], [85.2, 95.0], [85.3, 95.0], [85.4, 96.0], [85.5, 96.0], [85.6, 96.0], [85.7, 97.0], [85.8, 97.0], [85.9, 97.0], [86.0, 98.0], [86.1, 98.0], [86.2, 98.0], [86.3, 99.0], [86.4, 99.0], [86.5, 99.0], [86.6, 100.0], [86.7, 100.0], [86.8, 100.0], [86.9, 101.0], [87.0, 101.0], [87.1, 102.0], [87.2, 102.0], [87.3, 102.0], [87.4, 103.0], [87.5, 103.0], [87.6, 103.0], [87.7, 104.0], [87.8, 104.0], [87.9, 104.0], [88.0, 105.0], [88.1, 105.0], [88.2, 106.0], [88.3, 106.0], [88.4, 107.0], [88.5, 107.0], [88.6, 107.0], [88.7, 108.0], [88.8, 108.0], [88.9, 109.0], [89.0, 110.0], [89.1, 110.0], [89.2, 111.0], [89.3, 111.0], [89.4, 112.0], [89.5, 112.0], [89.6, 113.0], [89.7, 113.0], [89.8, 113.0], [89.9, 114.0], [90.0, 114.0], [90.1, 115.0], [90.2, 115.0], [90.3, 115.0], [90.4, 116.0], [90.5, 117.0], [90.6, 117.0], [90.7, 118.0], [90.8, 118.0], [90.9, 118.0], [91.0, 119.0], [91.1, 119.0], [91.2, 120.0], [91.3, 120.0], [91.4, 121.0], [91.5, 121.0], [91.6, 122.0], [91.7, 122.0], [91.8, 123.0], [91.9, 123.0], [92.0, 124.0], [92.1, 125.0], [92.2, 125.0], [92.3, 126.0], [92.4, 127.0], [92.5, 128.0], [92.6, 128.0], [92.7, 129.0], [92.8, 130.0], [92.9, 130.0], [93.0, 131.0], [93.1, 132.0], [93.2, 133.0], [93.3, 133.0], [93.4, 134.0], [93.5, 134.0], [93.6, 135.0], [93.7, 136.0], [93.8, 137.0], [93.9, 138.0], [94.0, 139.0], [94.1, 140.0], [94.2, 141.0], [94.3, 141.0], [94.4, 142.0], [94.5, 143.0], [94.6, 144.0], [94.7, 145.0], [94.8, 146.0], [94.9, 147.0], [95.0, 148.0], [95.1, 149.0], [95.2, 150.0], [95.3, 151.0], [95.4, 152.0], [95.5, 154.0], [95.6, 156.0], [95.7, 157.0], [95.8, 158.0], [95.9, 160.0], [96.0, 162.0], [96.1, 163.0], [96.2, 164.0], [96.3, 165.0], [96.4, 167.0], [96.5, 169.0], [96.6, 171.0], [96.7, 172.0], [96.8, 173.0], [96.9, 175.0], [97.0, 178.0], [97.1, 179.0], [97.2, 181.0], [97.3, 182.0], [97.4, 183.0], [97.5, 185.0], [97.6, 187.0], [97.7, 188.0], [97.8, 190.0], [97.9, 192.0], [98.0, 194.0], [98.1, 197.0], [98.2, 199.0], [98.3, 201.0], [98.4, 203.0], [98.5, 206.0], [98.6, 208.0], [98.7, 211.0], [98.8, 213.0], [98.9, 216.0], [99.0, 218.0], [99.1, 222.0], [99.2, 224.0], [99.3, 228.0], [99.4, 232.0], [99.5, 237.0], [99.6, 249.0], [99.7, 269.0], [99.8, 334.0], [99.9, 1136.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 346190.0, "series": [{"data": [[0.0, 346190.0], [3000.0, 10.0], [3100.0, 52.0], [200.0, 6034.0], [3200.0, 30.0], [3300.0, 1.0], [1000.0, 135.0], [1100.0, 271.0], [300.0, 286.0], [1200.0, 102.0], [1300.0, 19.0], [1400.0, 3.0], [100.0, 46796.0], [400.0, 23.0], [7000.0, 20.0], [7100.0, 12.0], [500.0, 16.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 125.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 399329.0, "series": [{"data": [[0.0, 399329.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 546.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 125.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1861.8243174999857, "minX": 1.58524542E12, "maxY": 1861.8243174999857, "series": [{"data": [[1.58524542E12, 1861.8243174999857]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58524542E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 276.3333333333333, "series": [{"data": [[2.0, 1.5], [3.0, 1.0], [4.0, 1.6666666666666667], [5.0, 1.5], [6.0, 1.6666666666666667], [7.0, 1.25], [8.0, 1.5], [9.0, 1.4444444444444446], [10.0, 1.3877551020408168], [11.0, 2.0], [12.0, 1.4285714285714286], [13.0, 1.4444444444444442], [14.0, 1.5714285714285714], [15.0, 1.3333333333333333], [16.0, 1.4285714285714286], [17.0, 1.846153846153846], [18.0, 1.5], [21.0, 1.1428571428571428], [23.0, 2.0], [24.0, 3.1111111111111116], [25.0, 2.6296296296296293], [26.0, 1.0], [27.0, 1.3333333333333333], [28.0, 1.7727272727272723], [29.0, 2.0], [30.0, 1.5249999999999997], [31.0, 1.5762711864406782], [33.0, 1.3076923076923077], [32.0, 1.5885714285714287], [35.0, 1.53125], [34.0, 1.7407407407407407], [37.0, 1.9], [36.0, 1.6666666666666665], [39.0, 1.8888888888888886], [38.0, 1.0], [41.0, 2.0], [40.0, 1.2222222222222223], [43.0, 1.6458333333333333], [42.0, 2.0], [45.0, 1.8888888888888886], [44.0, 1.4999999999999998], [47.0, 2.0], [46.0, 2.0], [49.0, 2.2413793103448274], [48.0, 2.3333333333333335], [51.0, 1.9333333333333331], [50.0, 2.0], [53.0, 1.5625], [52.0, 1.6249999999999996], [55.0, 1.9375], [57.0, 1.5740740740740744], [56.0, 2.0], [59.0, 1.7499999999999998], [58.0, 1.8235294117647058], [61.0, 1.2], [60.0, 1.1111111111111112], [63.0, 2.25], [62.0, 1.7551020408163265], [67.0, 1.9767441860465118], [66.0, 2.0], [65.0, 1.789473684210526], [64.0, 2.0], [71.0, 2.0], [70.0, 1.95], [69.0, 2.137931034482759], [68.0, 2.285714285714286], [75.0, 2.0], [74.0, 2.25], [73.0, 2.181818181818182], [72.0, 1.8727272727272726], [79.0, 2.0], [78.0, 2.3333333333333335], [76.0, 1.7777777777777777], [83.0, 2.1333333333333333], [82.0, 2.137931034482759], [81.0, 2.0], [80.0, 1.9090909090909092], [87.0, 2.181818181818182], [86.0, 2.0454545454545454], [85.0, 2.1176470588235294], [91.0, 2.4499999999999997], [90.0, 2.4375], [88.0, 2.6666666666666665], [95.0, 2.2857142857142856], [94.0, 1.9411764705882357], [93.0, 1.0], [92.0, 2.375], [99.0, 2.5555555555555554], [98.0, 2.583333333333333], [96.0, 2.5], [103.0, 3.0], [101.0, 3.0], [100.0, 2.7142857142857144], [107.0, 2.0], [106.0, 2.2380952380952377], [105.0, 2.647058823529412], [104.0, 2.5], [111.0, 3.0], [110.0, 2.2105263157894735], [109.0, 2.888888888888889], [108.0, 2.857142857142857], [115.0, 2.5238095238095237], [114.0, 2.5], [113.0, 3.0], [112.0, 2.7777777777777777], [119.0, 3.1000000000000005], [118.0, 3.0], [117.0, 2.75], [116.0, 3.1406249999999996], [123.0, 3.666666666666667], [122.0, 3.3333333333333335], [121.0, 3.619047619047619], [120.0, 3.0], [127.0, 4.0], [126.0, 3.8928571428571423], [125.0, 3.25], [124.0, 3.8260869565217384], [135.0, 4.0], [134.0, 3.9285714285714284], [133.0, 4.2857142857142865], [132.0, 4.0], [131.0, 4.0], [130.0, 4.0], [129.0, 3.5384615384615388], [128.0, 4.5], [143.0, 4.0], [142.0, 4.857142857142857], [141.0, 4.258064516129033], [140.0, 4.054054054054054], [139.0, 3.6875], [138.0, 4.0], [137.0, 4.0], [136.0, 4.0], [151.0, 4.0], [150.0, 4.666666666666667], [149.0, 5.0], [148.0, 4.857142857142857], [147.0, 4.5], [146.0, 4.0], [145.0, 4.264705882352942], [144.0, 4.25], [159.0, 5.0], [158.0, 5.0], [157.0, 5.0], [156.0, 5.0], [155.0, 4.666666666666666], [154.0, 4.499999999999999], [153.0, 4.428571428571429], [152.0, 4.0], [167.0, 4.666666666666667], [166.0, 5.090909090909091], [165.0, 5.117647058823529], [164.0, 5.2666666666666675], [163.0, 5.407407407407406], [161.0, 4.764705882352941], [160.0, 5.0], [175.0, 5.515151515151516], [174.0, 5.5], [173.0, 5.1], [172.0, 4.733333333333333], [171.0, 5.0], [170.0, 5.0], [169.0, 5.447368421052632], [168.0, 5.0], [183.0, 5.230769230769231], [182.0, 5.666666666666668], [181.0, 6.0], [180.0, 6.0625], [178.0, 5.0], [177.0, 5.166666666666667], [176.0, 5.5625], [191.0, 6.0], [190.0, 5.25], [189.0, 5.0], [188.0, 5.222222222222222], [186.0, 5.230769230769231], [185.0, 5.818181818181818], [184.0, 5.666666666666666], [199.0, 6.352941176470587], [198.0, 6.0], [197.0, 6.0], [196.0, 5.777777777777778], [195.0, 5.575757575757577], [194.0, 5.5], [193.0, 5.507246376811593], [192.0, 6.333333333333334], [207.0, 5.0], [206.0, 5.25], [205.0, 5.3], [204.0, 5.25], [203.0, 5.741935483870966], [202.0, 6.333333333333333], [201.0, 6.0], [200.0, 5.875], [215.0, 4.80952380952381], [214.0, 4.428571428571429], [213.0, 4.0], [212.0, 4.0], [211.0, 5.588235294117646], [210.0, 5.000000000000002], [209.0, 4.695652173913043], [208.0, 4.7804878048780495], [223.0, 6.333333333333333], [222.0, 5.978260869565217], [221.0, 5.5], [220.0, 5.5], [219.0, 4.857142857142858], [218.0, 4.0], [217.0, 5.199999999999999], [231.0, 5.615384615384615], [230.0, 5.75], [228.0, 5.444444444444445], [227.0, 5.25], [226.0, 5.250000000000001], [225.0, 5.421052631578947], [224.0, 6.454545454545454], [239.0, 62.333333333333336], [238.0, 60.599999999999994], [237.0, 6.875], [236.0, 7.0], [235.0, 6.5], [233.0, 5.923076923076923], [232.0, 6.0], [240.0, 62.058823529411754], [241.0, 151.54166666666669], [245.0, 43.22727272727272], [246.0, 168.33333333333331], [244.0, 129.83333333333337], [243.0, 181.0], [247.0, 12.793103448275863], [242.0, 7.0], [248.0, 143.2], [250.0, 25.77777777777778], [251.0, 16.799999999999997], [252.0, 69.0], [254.0, 39.90909090909091], [255.0, 8.0], [253.0, 7.75], [249.0, 7.0], [268.0, 178.6], [258.0, 37.0], [257.0, 15.541666666666668], [256.0, 8.0], [259.0, 48.2], [263.0, 41.75000000000001], [262.0, 7.5], [261.0, 8.4], [260.0, 9.0], [264.0, 57.93333333333333], [265.0, 196.0], [266.0, 25.09090909090909], [267.0, 151.25], [269.0, 17.694444444444446], [270.0, 159.57142857142858], [271.0, 57.846153846153854], [284.0, 52.416666666666664], [273.0, 77.91666666666666], [272.0, 20.941176470588236], [274.0, 21.05882352941176], [275.0, 8.899999999999999], [277.0, 238.75], [276.0, 8.085714285714284], [278.0, 8.25], [279.0, 8.363636363636365], [280.0, 29.22222222222222], [281.0, 125.77777777777777], [282.0, 23.400000000000002], [283.0, 174.76923076923077], [287.0, 8.62962962962963], [286.0, 8.1], [285.0, 9.0], [302.0, 8.428571428571429], [303.0, 8.421052631578945], [301.0, 7.384615384615385], [300.0, 7.884615384615384], [299.0, 8.75], [298.0, 8.375], [297.0, 8.0], [296.0, 8.0], [295.0, 8.128205128205128], [289.0, 8.666666666666666], [291.0, 8.0], [290.0, 8.206896551724139], [294.0, 8.323529411764707], [293.0, 8.30952380952381], [292.0, 7.617647058823529], [306.0, 90.33333333333333], [307.0, 66.27272727272727], [316.0, 80.55555555555556], [317.0, 25.999999999999996], [318.0, 36.68965517241378], [319.0, 9.2], [308.0, 27.615384615384627], [309.0, 276.3333333333333], [310.0, 60.87500000000002], [311.0, 25.277777777777775], [305.0, 8.0], [304.0, 8.166666666666666], [312.0, 85.94444444444446], [313.0, 261.25], [315.0, 106.10714285714283], [314.0, 8.5], [321.0, 38.03846153846153], [320.0, 92.08333333333333], [323.0, 97.64285714285715], [322.0, 10.0], [324.0, 12.97674418604651], [325.0, 17.894736842105267], [326.0, 60.44999999999999], [327.0, 9.166666666666666], [330.0, 148.45945945945945], [331.0, 29.499999999999996], [332.0, 37.823529411764696], [334.0, 121.5], [333.0, 9.846153846153847], [335.0, 26.15], [329.0, 9.333333333333334], [328.0, 9.142857142857142], [338.0, 52.11111111111111], [336.0, 28.5], [339.0, 64.16666666666669], [348.0, 11.0], [349.0, 57.1], [350.0, 22.666666666666668], [351.0, 23.687499999999996], [340.0, 15.290322580645164], [341.0, 95.5], [342.0, 76.66666666666666], [343.0, 117.66666666666666], [344.0, 46.230769230769226], [345.0, 63.41935483870969], [347.0, 129.66666666666666], [346.0, 11.0], [353.0, 48.0], [352.0, 135.14285714285714], [354.0, 54.91666666666668], [355.0, 50.55555555555556], [356.0, 121.4], [357.0, 107.4], [358.0, 46.38095238095238], [359.0, 82.4], [360.0, 93.75], [366.0, 116.33333333333333], [367.0, 240.0], [364.0, 76.91304347826089], [365.0, 35.949999999999996], [361.0, 117.31249999999999], [362.0, 191.6], [363.0, 21.94736842105263], [369.0, 135.75], [368.0, 41.17241379310345], [370.0, 62.0], [371.0, 115.10526315789473], [372.0, 61.57142857142857], [373.0, 83.46153846153847], [374.0, 78.90909090909093], [375.0, 17.37777777777778], [379.0, 16.058823529411764], [378.0, 11.2], [377.0, 11.0], [376.0, 11.0], [380.0, 30.124999999999996], [382.0, 12.708333333333334], [381.0, 12.499999999999998], [383.0, 12.0625], [397.0, 133.41666666666669], [393.0, 32.93333333333333], [392.0, 49.92307692307692], [394.0, 51.875], [395.0, 174.75], [396.0, 56.90909090909091], [387.0, 12.428571428571429], [386.0, 13.0], [385.0, 12.933333333333334], [384.0, 12.0], [398.0, 66.33333333333333], [399.0, 65.66666666666666], [391.0, 12.25], [390.0, 12.666666666666666], [389.0, 12.0], [388.0, 12.285714285714286], [401.0, 25.45833333333334], [400.0, 40.64705882352942], [402.0, 17.21875], [403.0, 96.5], [404.0, 79.19999999999999], [405.0, 24.5], [406.0, 57.54545454545455], [407.0, 108.0], [408.0, 72.375], [414.0, 91.88235294117646], [415.0, 72.0], [412.0, 35.27272727272727], [413.0, 123.66666666666666], [409.0, 60.60714285714287], [410.0, 40.642857142857146], [411.0, 55.533333333333346], [417.0, 96.0], [416.0, 152.33333333333334], [418.0, 77.25000000000001], [419.0, 33.4], [420.0, 144.6], [421.0, 71.4074074074074], [422.0, 185.0], [423.0, 119.66666666666666], [424.0, 32.31578947368422], [430.0, 181.45454545454547], [431.0, 44.45000000000002], [428.0, 73.15789473684208], [429.0, 165.16666666666669], [425.0, 108.5], [426.0, 47.07142857142858], [427.0, 173.0], [434.0, 114.60000000000001], [433.0, 14.97435897435897], [432.0, 10.846153846153847], [435.0, 185.0], [444.0, 57.25000000000001], [445.0, 171.5], [446.0, 140.58823529411768], [447.0, 42.71052631578947], [436.0, 55.26666666666667], [437.0, 78.00000000000001], [438.0, 20.352941176470587], [439.0, 185.0], [440.0, 21.857142857142858], [441.0, 65.0294117647059], [442.0, 177.125], [443.0, 21.58139534883721], [449.0, 21.03571428571429], [448.0, 169.46153846153845], [451.0, 30.937499999999993], [450.0, 10.105263157894736], [460.0, 125.0], [461.0, 91.75], [462.0, 15.074074074074076], [463.0, 146.76], [452.0, 107.0], [453.0, 25.13636363636363], [454.0, 39.16666666666667], [455.0, 10.0], [456.0, 28.333333333333332], [457.0, 67.66666666666667], [458.0, 52.29545454545456], [459.0, 29.000000000000007], [465.0, 50.47058823529411], [467.0, 135.5], [466.0, 9.749999999999998], [468.0, 196.25], [469.0, 138.47058823529414], [470.0, 39.727272727272734], [471.0, 49.09523809523808], [464.0, 9.0], [479.0, 10.25], [473.0, 11.42857142857143], [472.0, 11.421052631578947], [475.0, 12.035714285714285], [474.0, 11.5], [478.0, 10.0], [477.0, 10.0], [476.0, 10.571428571428571], [487.0, 50.80769230769229], [484.0, 131.33333333333334], [485.0, 41.17391304347827], [486.0, 62.51351351351351], [489.0, 65.71428571428574], [490.0, 106.09090909090907], [491.0, 11.81132075471698], [492.0, 74.24999999999999], [483.0, 10.899999999999999], [481.0, 10.473684210526315], [480.0, 10.375], [493.0, 105.83333333333334], [494.0, 103.36363636363636], [495.0, 14.0], [497.0, 93.83333333333333], [496.0, 117.55555555555554], [498.0, 70.24137931034483], [499.0, 12.2], [508.0, 49.111111111111114], [509.0, 168.3], [510.0, 19.14285714285715], [511.0, 140.5], [500.0, 60.45238095238098], [501.0, 34.49999999999999], [502.0, 126.2], [503.0, 68.0], [504.0, 114.5], [505.0, 93.70000000000002], [506.0, 178.8], [507.0, 173.28571428571428], [516.0, 161.0], [512.0, 30.789473684210535], [524.0, 129.0], [526.0, 12.600000000000001], [514.0, 49.15624999999999], [518.0, 46.4], [536.0, 98.52830188679243], [538.0, 141.6470588235294], [540.0, 57.333333333333336], [528.0, 173.27272727272725], [530.0, 12.85714285714286], [532.0, 29.17241379310345], [534.0, 86.68421052631581], [520.0, 25.82352941176471], [522.0, 12.285714285714286], [546.0, 26.538461538461537], [544.0, 77.79166666666669], [558.0, 27.32608695652175], [554.0, 44.0], [556.0, 42.58823529411766], [548.0, 77.07692307692308], [550.0, 105.0], [560.0, 95.00000000000001], [562.0, 15.064516129032258], [566.0, 14.88888888888889], [564.0, 15.055555555555554], [568.0, 78.51515151515153], [570.0, 56.25], [572.0, 172.0], [574.0, 33.07407407407406], [552.0, 52.77777777777778], [602.0, 35.17307692307693], [576.0, 47.068965517241374], [590.0, 24.093750000000007], [600.0, 196.16666666666666], [582.0, 13.4], [580.0, 13.2], [578.0, 14.0], [604.0, 103.81578947368423], [606.0, 48.0], [592.0, 59.693548387096754], [594.0, 90.1764705882353], [596.0, 69.58333333333333], [598.0, 52.777777777777786], [584.0, 67.13636363636365], [586.0, 39.212121212121204], [588.0, 23.437500000000004], [614.0, 35.34999999999999], [608.0, 121.45454545454544], [620.0, 74.0344827586207], [622.0, 15.148148148148149], [612.0, 31.211267605633783], [610.0, 13.0], [632.0, 44.43333333333333], [634.0, 136.33333333333334], [636.0, 25.952380952380956], [638.0, 142.71428571428572], [624.0, 48.60000000000001], [626.0, 51.91666666666669], [628.0, 45.67647058823527], [630.0, 114.85714285714286], [616.0, 86.44444444444443], [618.0, 14.0], [642.0, 47.0909090909091], [640.0, 172.53333333333333], [654.0, 64.56249999999997], [652.0, 69.64285714285715], [650.0, 78.37037037037034], [644.0, 187.6153846153846], [646.0, 194.0], [656.0, 150.62499999999997], [670.0, 18.181818181818183], [668.0, 18.976744186046513], [666.0, 19.18518518518519], [658.0, 35.63636363636364], [660.0, 92.15384615384616], [648.0, 96.86666666666663], [674.0, 209.0], [672.0, 52.0], [686.0, 68.92857142857144], [684.0, 67.15909090909089], [682.0, 65.75], [676.0, 143.11111111111111], [678.0, 29.28571428571428], [696.0, 181.13636363636363], [698.0, 129.70833333333331], [702.0, 109.85106382978722], [700.0, 14.0], [688.0, 67.90625], [690.0, 199.23076923076925], [692.0, 94.14285714285714], [694.0, 56.61538461538462], [680.0, 67.57894736842105], [730.0, 76.44444444444446], [706.0, 175.47619047619045], [718.0, 184.96428571428572], [704.0, 14.8], [710.0, 62.6774193548387], [708.0, 16.333333333333332], [720.0, 68.30769230769229], [734.0, 30.187500000000007], [732.0, 91.39999999999999], [728.0, 124.02777777777771], [722.0, 77.76], [724.0, 34.666666666666664], [726.0, 65.1111111111111], [714.0, 58.62499999999999], [712.0, 17.125], [716.0, 129.66666666666666], [738.0, 112.81578947368422], [736.0, 98.0], [750.0, 77.85714285714286], [748.0, 118.29629629629629], [740.0, 20.547169811320746], [742.0, 45.69230769230769], [764.0, 39.916666666666664], [766.0, 133.22222222222223], [752.0, 16.454545454545453], [762.0, 49.22222222222222], [760.0, 168.375], [754.0, 21.666666666666668], [756.0, 167.14285714285714], [758.0, 43.0], [744.0, 80.4], [746.0, 16.27272727272727], [774.0, 102.27272727272727], [768.0, 27.750000000000004], [782.0, 70.70270270270271], [780.0, 88.3], [778.0, 67.75], [772.0, 31.821428571428577], [770.0, 17.5], [794.0, 29.902777777777754], [792.0, 17.78], [796.0, 62.99999999999999], [798.0, 72.89473684210526], [784.0, 54.416666666666664], [786.0, 51.62962962962963], [788.0, 65.99999999999999], [790.0, 18.000000000000004], [776.0, 132.79999999999998], [802.0, 47.300000000000004], [800.0, 31.785714285714267], [814.0, 89.85714285714286], [810.0, 74.1578947368421], [812.0, 43.629629629629626], [804.0, 165.66666666666666], [806.0, 42.148936170212764], [816.0, 41.909090909090914], [830.0, 88.46666666666664], [828.0, 197.3], [826.0, 129.66666666666666], [824.0, 173.0], [818.0, 113.16216216216213], [820.0, 48.75], [822.0, 68.55000000000001], [808.0, 74.37142857142857], [838.0, 54.85714285714286], [832.0, 41.857142857142854], [836.0, 17.0], [834.0, 17.5], [846.0, 189.33333333333334], [844.0, 84.90909090909092], [856.0, 55.903225806451644], [858.0, 58.59999999999999], [860.0, 56.814814814814774], [862.0, 67.66666666666666], [848.0, 52.65853658536585], [850.0, 97.81818181818183], [852.0, 122.0], [854.0, 110.0], [840.0, 94.1923076923077], [842.0, 64.27272727272727], [870.0, 138.8695652173913], [864.0, 110.78723404255324], [878.0, 50.333333333333336], [868.0, 157.45454545454547], [866.0, 22.11111111111111], [880.0, 190.55555555555557], [894.0, 180.51612903225808], [892.0, 28.343749999999996], [890.0, 127.31818181818178], [888.0, 153.34782608695656], [882.0, 134.49999999999997], [884.0, 60.244444444444426], [886.0, 178.16666666666663], [872.0, 115.22222222222223], [874.0, 22.19512195121951], [876.0, 105.82758620689657], [898.0, 119.99999999999999], [896.0, 89.68055555555556], [910.0, 160.0], [908.0, 72.39999999999993], [900.0, 26.629629629629626], [902.0, 193.3529411764706], [912.0, 83.85714285714285], [920.0, 21.836065573770497], [922.0, 18.833333333333332], [926.0, 18.72727272727273], [924.0, 19.705882352941178], [914.0, 195.7777777777778], [918.0, 25.879999999999995], [916.0, 20.0625], [904.0, 58.65384615384616], [906.0, 76.82142857142858], [934.0, 75.71232876712328], [952.0, 138.99999999999997], [928.0, 23.057142857142857], [930.0, 44.83999999999998], [932.0, 49.25925925925924], [954.0, 50.14285714285715], [956.0, 45.9047619047619], [958.0, 24.848484848484844], [936.0, 101.0], [940.0, 20.055555555555554], [938.0, 22.545454545454547], [942.0, 19.681818181818183], [948.0, 130.16216216216222], [946.0, 20.2], [950.0, 52.974358974359], [962.0, 103.39240506329112], [960.0, 66.12903225806451], [974.0, 54.586206896551744], [972.0, 73.88000000000001], [970.0, 158.73684210526315], [964.0, 70.22580645161291], [966.0, 76.37499999999999], [976.0, 145.7037037037037], [990.0, 102.05263157894737], [988.0, 143.75], [986.0, 108.38235294117649], [984.0, 114.75], [978.0, 172.83673469387753], [980.0, 27.81333333333334], [982.0, 45.599999999999994], [968.0, 49.05263157894737], [994.0, 90.30769230769232], [992.0, 28.457627118644076], [1006.0, 164.962962962963], [1004.0, 55.61363636363635], [1002.0, 31.761904761904766], [996.0, 42.266666666666666], [998.0, 50.25], [1008.0, 64.23076923076921], [1022.0, 156.80645161290323], [1020.0, 36.0561797752809], [1018.0, 80.03225806451611], [1016.0, 45.45454545454545], [1010.0, 62.62500000000001], [1012.0, 67.44444444444446], [1014.0, 103.18181818181817], [1000.0, 31.088888888888885], [1028.0, 144.54545454545453], [1024.0, 42.68333333333333], [1052.0, 22.543478260869556], [1048.0, 36.76923076923076], [1044.0, 60.01818181818182], [1040.0, 75.55999999999997], [1032.0, 54.420000000000016], [1036.0, 54.18750000000001], [1056.0, 68.6756756756757], [1080.0, 95.53030303030305], [1076.0, 63.33999999999998], [1072.0, 74.37623762376238], [1060.0, 109.07446808510635], [1064.0, 52.125], [1068.0, 74.77777777777776], [1096.0, 45.5], [1092.0, 65.24999999999999], [1088.0, 26.0], [1116.0, 68.32608695652173], [1112.0, 44.75], [1108.0, 104.19047619047619], [1104.0, 69.45454545454548], [1100.0, 81.20588235294117], [1120.0, 67.41666666666666], [1148.0, 32.62962962962963], [1144.0, 54.05263157894738], [1140.0, 46.23809523809524], [1136.0, 42.945945945945944], [1124.0, 33.625], [1128.0, 32.901960784313744], [1132.0, 23.258064516129032], [1156.0, 41.37012987012987], [1176.0, 41.48684210526316], [1152.0, 56.625], [1180.0, 29.151515151515156], [1172.0, 29.571428571428577], [1168.0, 31.625], [1160.0, 58.18749999999999], [1164.0, 54.95744680851061], [1184.0, 80.46808510638299], [1212.0, 30.314285714285713], [1208.0, 52.29729729729729], [1204.0, 44.958333333333314], [1200.0, 37.0], [1188.0, 32.92592592592594], [1192.0, 53.261904761904766], [1196.0, 26.822580645161292], [1228.0, 49.18181818181818], [1216.0, 46.37499999999999], [1224.0, 27.0], [1220.0, 28.0], [1264.0, 39.25000000000001], [1268.0, 59.279503105590074], [1272.0, 93.49122807017542], [1276.0, 41.46153846153846], [1232.0, 61.38461538461535], [1236.0, 24.36363636363636], [1240.0, 37.34615384615384], [1244.0, 62.20588235294119], [1248.0, 41.32203389830508], [1252.0, 119.61320754716981], [1256.0, 35.58064516129031], [1260.0, 50.30769230769229], [1336.0, 30.699999999999996], [1280.0, 50.67045454545455], [1284.0, 46.769230769230774], [1288.0, 65.2962962962963], [1292.0, 38.81818181818181], [1312.0, 61.560000000000024], [1340.0, 106.94666666666669], [1328.0, 33.277777777777764], [1332.0, 76.4516129032258], [1320.0, 94.17431192660551], [1316.0, 42.63636363636364], [1324.0, 91.3095238095238], [1296.0, 116.40740740740743], [1300.0, 125.93103448275863], [1308.0, 39.999999999999986], [1304.0, 39.599999999999994], [1352.0, 92.86363636363636], [1348.0, 92.98039215686273], [1344.0, 34.15624999999999], [1368.0, 31.5], [1372.0, 34.275000000000006], [1356.0, 53.557377049180346], [1376.0, 31.5], [1404.0, 105.3116883116883], [1400.0, 31.333333333333332], [1392.0, 61.41935483870967], [1396.0, 48.92857142857142], [1380.0, 140.63855421686748], [1384.0, 32.416666666666664], [1388.0, 91.5384615384615], [1360.0, 104.86666666666669], [1364.0, 115.92800000000003], [1420.0, 52.90769230769231], [1412.0, 53.67567567567567], [1408.0, 106.12195121951218], [1436.0, 83.28985507246375], [1432.0, 78.8260869565217], [1416.0, 50.1206896551724], [1456.0, 105.75609756097558], [1460.0, 36.48], [1464.0, 93.95652173913044], [1468.0, 99.61538461538461], [1440.0, 50.41176470588235], [1448.0, 90.47457627118642], [1444.0, 31.043478260869563], [1452.0, 128.91666666666669], [1424.0, 60.035714285714285], [1428.0, 116.14285714285714], [1480.0, 66.22857142857144], [1484.0, 73.10285714285718], [1472.0, 111.3103448275862], [1500.0, 73.08235294117645], [1496.0, 84.72727272727275], [1476.0, 76.33009708737863], [1520.0, 28.743589743589748], [1524.0, 61.13402061855672], [1528.0, 65.06779661016951], [1532.0, 59.51724137931033], [1504.0, 65.13513513513514], [1508.0, 57.222222222222214], [1512.0, 61.83636363636363], [1516.0, 46.24285714285715], [1488.0, 112.28260869565213], [1492.0, 32.588235294117645], [1548.0, 26.80645161290322], [1584.0, 40.2127659574468], [1536.0, 54.46874999999999], [1540.0, 27.80769230769231], [1544.0, 24.210526315789473], [1588.0, 29.166666666666668], [1592.0, 121.87096774193549], [1596.0, 45.68918918918918], [1552.0, 23.05882352941176], [1556.0, 71.48958333333336], [1560.0, 31.333333333333332], [1564.0, 75.00000000000003], [1568.0, 39.352941176470594], [1572.0, 101.08536585365857], [1576.0, 67.23076923076924], [1580.0, 101.70329670329673], [1604.0, 27.812500000000004], [1600.0, 55.235294117647065], [1612.0, 103.45918367346944], [1648.0, 38.92857142857143], [1652.0, 36.81818181818181], [1656.0, 33.75], [1660.0, 79.72000000000003], [1616.0, 65.67914438502675], [1620.0, 20.896551724137932], [1624.0, 50.52380952380953], [1628.0, 67.4866310160428], [1632.0, 99.56521739130434], [1636.0, 43.88888888888889], [1640.0, 84.03816793893127], [1644.0, 37.02564102564103], [1672.0, 63.9354838709677], [1716.0, 91.76119402985076], [1664.0, 88.45631067961163], [1692.0, 41.61111111111111], [1688.0, 41.41891891891892], [1668.0, 52.56329113924053], [1676.0, 68.25688073394495], [1680.0, 101.10909090909091], [1704.0, 42.938775510204096], [1700.0, 43.30769230769231], [1696.0, 45.0], [1724.0, 38.769230769230774], [1720.0, 107.89230769230774], [1708.0, 83.54400000000003], [1740.0, 45.1], [1728.0, 56.93069306930692], [1732.0, 143.0864197530864], [1736.0, 44.63636363636363], [1776.0, 60.8235294117647], [1780.0, 105.60000000000002], [1760.0, 42.0], [1788.0, 42.214285714285715], [1784.0, 47.379999999999995], [1744.0, 43.73684210526316], [1748.0, 45.0], [1752.0, 138.2845528455284], [1756.0, 41.61538461538462], [1764.0, 81.2782608695652], [1772.0, 47.333333333333336], [1768.0, 42.733333333333334], [1796.0, 78.53763440860219], [1804.0, 126.90410958904107], [1792.0, 61.07142857142858], [1820.0, 45.10471204188484], [1816.0, 86.66], [1812.0, 124.33333333333333], [1800.0, 132.7717391304349], [1840.0, 38.0], [1844.0, 95.10000000000002], [1848.0, 81.18749999999999], [1852.0, 46.14705882352942], [1824.0, 187.75000000000006], [1828.0, 59.83333333333333], [1832.0, 58.80392156862747], [1836.0, 61.097826086956516], [1808.0, 50.99999999999999], [1868.0, 45.344827586206904], [1864.0, 44.969696969696976], [1904.0, 47.51219512195122], [1908.0, 71.09589041095889], [1912.0, 66.02255639097739], [1916.0, 54.2280701754386], [1888.0, 52.230000000000004], [1872.0, 59.35507246376812], [1876.0, 81.83898305084747], [1880.0, 61.174999999999976], [1856.0, 46.3225806451613], [1860.0, 47.013333333333335], [1884.0, 52.5], [1892.0, 75.55284552845531], [1896.0, 47.40601503759399], [1900.0, 48.0], [1932.0, 116.0], [1924.0, 100.05217391304345], [1920.0, 45.876288659793815], [1948.0, 54.16289592760182], [1928.0, 64.34920634920638], [1968.0, 79.25], [1976.0, 12.164179104477613], [1972.0, 17.888888888888893], [1952.0, 52.312500000000014], [1956.0, 108.15789473684202], [1964.0, 55.826923076923094], [1960.0, 30.6875], [1940.0, 114.43137254901967], [1936.0, 46.74999999999999], [1944.0, 88.51412429378537], [1992.0, 34.76611418047883], [1984.0, 61.38339920948617], [2000.0, 63.94639695843128], [1996.0, 43.857900318133574], [1988.0, 36.38541666666668], [1025.0, 90.46153846153848], [1053.0, 147.46153846153848], [1049.0, 126.05555555555557], [1045.0, 76.45070422535211], [1041.0, 132.00000000000003], [1029.0, 54.84615384615386], [1033.0, 81.33333333333334], [1037.0, 88.42857142857144], [1081.0, 40.45161290322581], [1085.0, 26.999999999999996], [1077.0, 97.7142857142857], [1073.0, 87.59999999999998], [1057.0, 30.58064516129032], [1061.0, 132.3888888888889], [1065.0, 53.43478260869565], [1069.0, 86.36956521739125], [1093.0, 60.54237288135592], [1117.0, 59.92857142857141], [1089.0, 26.5], [1113.0, 82.76811594202898], [1109.0, 96.35999999999999], [1105.0, 107.90291262135922], [1097.0, 110.91666666666666], [1101.0, 73.23529411764706], [1149.0, 65.37894736842108], [1145.0, 39.81818181818183], [1141.0, 34.37837837837839], [1137.0, 32.727272727272705], [1121.0, 74.58762886597934], [1125.0, 75.02614379084964], [1129.0, 51.96774193548387], [1133.0, 49.22222222222222], [1157.0, 32.6], [1181.0, 29.525], [1169.0, 57.88235294117647], [1177.0, 23.25], [1173.0, 23.5], [1153.0, 38.20588235294117], [1161.0, 60.44680851063829], [1165.0, 52.43119266055046], [1185.0, 73.55769230769232], [1213.0, 26.0], [1209.0, 51.182926829268304], [1205.0, 32.833333333333336], [1201.0, 55.46666666666668], [1189.0, 64.29807692307692], [1193.0, 56.70212765957446], [1197.0, 26.79411764705882], [1273.0, 86.5], [1221.0, 58.32258064516133], [1217.0, 30.351851851851848], [1269.0, 50.412280701754376], [1265.0, 36.5], [1229.0, 25.961538461538463], [1225.0, 26.86363636363636], [1277.0, 51.45945945945946], [1249.0, 26.111111111111107], [1253.0, 61.161016949152575], [1261.0, 40.360902255639076], [1257.0, 29.0], [1233.0, 50.443548387096754], [1241.0, 25.0], [1237.0, 25.1875], [1245.0, 27.352941176470587], [1329.0, 129.11111111111111], [1285.0, 63.77118644067794], [1293.0, 38.9375], [1289.0, 41.521739130434774], [1333.0, 53.41666666666668], [1337.0, 31.2], [1341.0, 30.5], [1297.0, 85.2], [1301.0, 40.0], [1305.0, 39.36363636363637], [1309.0, 40.48387096774194], [1281.0, 41.806451612903224], [1317.0, 43.0], [1321.0, 43.375], [1325.0, 90.82222222222222], [1349.0, 72.36065573770495], [1345.0, 43.30188679245282], [1373.0, 57.084507042253534], [1369.0, 78.3478260869565], [1353.0, 110.07142857142856], [1357.0, 34.0], [1393.0, 95.24000000000001], [1397.0, 63.52173913043477], [1401.0, 75.0294117647059], [1405.0, 71.03703703703701], [1377.0, 32.21428571428571], [1381.0, 104.34782608695652], [1385.0, 32.625], [1389.0, 105.1063829787234], [1361.0, 159.4], [1365.0, 60.22222222222223], [1413.0, 80.72972972972973], [1417.0, 80.39007092198582], [1409.0, 30.875], [1437.0, 32.90909090909091], [1421.0, 29.88888888888889], [1425.0, 31.652173913043484], [1429.0, 89.06000000000002], [1433.0, 75.6037735849057], [1441.0, 31.811764705882354], [1445.0, 29.2], [1469.0, 106.19999999999999], [1461.0, 37.36170212765957], [1465.0, 56.425], [1457.0, 83.35238095238093], [1449.0, 96.72499999999998], [1453.0, 120.14285714285714], [1477.0, 67.5], [1473.0, 98.13953488372093], [1501.0, 51.142857142857146], [1497.0, 89.9590163934427], [1481.0, 38.09090909090909], [1485.0, 96.52380952380953], [1505.0, 47.18461538461537], [1533.0, 66.08510638297872], [1529.0, 71.96551724137932], [1521.0, 23.0], [1525.0, 29.000000000000004], [1509.0, 54.85384615384619], [1513.0, 68.7121212121212], [1517.0, 58.92537313432837], [1489.0, 91.43333333333331], [1493.0, 106.25000000000001], [1565.0, 106.47422680412375], [1553.0, 62.722222222222236], [1557.0, 27.7741935483871], [1561.0, 79.16216216216215], [1569.0, 26.8780487804878], [1597.0, 46.852459016393446], [1593.0, 137.49999999999997], [1585.0, 115.83132530120479], [1549.0, 21.333333333333332], [1545.0, 25.809523809523807], [1541.0, 23.999999999999996], [1537.0, 25.77777777777778], [1589.0, 62.550724637681164], [1573.0, 78.03973509933773], [1577.0, 97.0], [1581.0, 94.06122448979592], [1613.0, 57.35294117647058], [1609.0, 18.928571428571427], [1605.0, 61.916666666666664], [1601.0, 20.756756756756765], [1649.0, 37.705882352941174], [1653.0, 36.54545454545455], [1657.0, 35.49999999999999], [1661.0, 75.22463768115945], [1617.0, 85.64814814814818], [1621.0, 78.39534883720928], [1625.0, 41.88888888888889], [1629.0, 48.61538461538462], [1633.0, 113.60000000000001], [1637.0, 42.00000000000001], [1641.0, 57.53846153846153], [1645.0, 58.21052631578945], [1669.0, 91.01694915254238], [1665.0, 76.1443298969072], [1693.0, 43.44347826086956], [1689.0, 40.016129032258064], [1685.0, 39.73333333333333], [1673.0, 45.544217687074834], [1677.0, 66.27586206896551], [1713.0, 43.0], [1717.0, 45.28571428571429], [1721.0, 79.17073170731709], [1705.0, 43.5], [1701.0, 43.15789473684211], [1697.0, 49.37234042553193], [1725.0, 39.13333333333334], [1709.0, 63.313725490196084], [1681.0, 80.25000000000003], [1741.0, 44.666666666666664], [1777.0, 60.27777777777775], [1729.0, 40.2], [1733.0, 124.22222222222214], [1737.0, 95.37209302325583], [1781.0, 97.03370786516854], [1785.0, 47.4], [1761.0, 42.879999999999995], [1789.0, 42.08108108108107], [1745.0, 43.35714285714286], [1749.0, 45.52727272727272], [1753.0, 128.35114503816794], [1757.0, 42.904761904761905], [1765.0, 84.90575916230365], [1769.0, 43.44444444444444], [1773.0, 45.92857142857143], [1801.0, 95.19827586206902], [1797.0, 106.26530612244899], [1793.0, 40.666666666666664], [1821.0, 89.55038759689928], [1817.0, 103.04672897196255], [1805.0, 63.725000000000016], [1825.0, 88.19148936170214], [1849.0, 44.32692307692308], [1853.0, 45.89473684210526], [1845.0, 160.30841121495325], [1841.0, 36.3846153846154], [1829.0, 141.62068965517244], [1833.0, 148.91666666666663], [1837.0, 122.40384615384612], [1809.0, 60.28571428571429], [1813.0, 43.76991150442477], [1865.0, 45.230769230769226], [1861.0, 55.702830188679236], [1857.0, 46.5], [1885.0, 52.552238805970156], [1869.0, 45.92682926829268], [1905.0, 137.40136054421782], [1909.0, 79.03883495145632], [1913.0, 48.973180076628346], [1917.0, 64.6], [1889.0, 55.86956521739131], [1893.0, 67.56666666666666], [1897.0, 103.30303030303031], [1901.0, 47.40540540540541], [1873.0, 72.20224719101128], [1877.0, 64.50000000000003], [1881.0, 81.27272727272728], [1929.0, 51.48897058823531], [1949.0, 52.882205513784456], [1925.0, 91.74999999999997], [1921.0, 47.03870967741934], [1933.0, 64.31279620853078], [1969.0, 45.54545454545455], [1973.0, 17.811023622047237], [1977.0, 10.946428571428573], [1953.0, 50.14492753623189], [1981.0, 7.319702602230484], [1957.0, 83.06081081081084], [1961.0, 28.08831168831169], [1965.0, 43.849557522123895], [1941.0, 75.41999999999996], [1937.0, 45.356164383561655], [1945.0, 59.12994350282484], [1985.0, 51.1939655172414], [1997.0, 46.15689865689857], [1993.0, 38.15856777493606], [1989.0, 40.401015228426395], [517.0, 187.5], [513.0, 156.41176470588238], [525.0, 48.20930232558139], [527.0, 13.25], [523.0, 177.0], [515.0, 40.64], [537.0, 141.73684210526315], [519.0, 12.047619047619047], [539.0, 125.69999999999997], [543.0, 36.274509803921575], [529.0, 13.0], [541.0, 12.0], [531.0, 26.826086956521745], [533.0, 160.91666666666666], [535.0, 172.5], [521.0, 20.363636363636363], [547.0, 83.84375000000003], [559.0, 77.76923076923075], [557.0, 80.91666666666669], [545.0, 131.5], [549.0, 52.18], [551.0, 58.99999999999999], [571.0, 77.6], [569.0, 15.058823529411764], [573.0, 35.68421052631579], [575.0, 109.0], [561.0, 35.125], [567.0, 15.0], [565.0, 14.333333333333334], [563.0, 15.333333333333334], [553.0, 33.71111111111112], [583.0, 96.5], [577.0, 82.42000000000002], [581.0, 14.0], [579.0, 13.5], [587.0, 125.4], [591.0, 97.0], [601.0, 96.96000000000002], [603.0, 60.31249999999999], [605.0, 134.27272727272728], [607.0, 20.461538461538467], [593.0, 25.214285714285715], [595.0, 54.77777777777778], [597.0, 41.8064516129032], [599.0, 61.833333333333336], [585.0, 155.28571428571428], [589.0, 41.61111111111112], [611.0, 99.92857142857139], [609.0, 35.4375], [623.0, 75.16000000000003], [619.0, 95.78571428571429], [621.0, 14.0], [613.0, 64.5217391304348], [615.0, 133.73684210526318], [633.0, 128.96153846153845], [635.0, 138.0], [637.0, 162.91666666666669], [639.0, 33.63157894736842], [625.0, 130.3], [627.0, 181.0], [629.0, 203.33333333333334], [631.0, 68.4], [617.0, 60.83870967741933], [643.0, 50.71428571428572], [655.0, 114.76923076923077], [653.0, 98.44444444444444], [651.0, 90.52000000000001], [641.0, 70.85714285714286], [645.0, 55.84615384615385], [647.0, 150.25], [665.0, 41.222222222222214], [669.0, 19.0], [671.0, 103.78571428571429], [657.0, 43.05405405405405], [659.0, 30.911111111111094], [663.0, 19.454545454545453], [661.0, 19.47368421052632], [649.0, 64.89743589743587], [677.0, 72.76190476190477], [673.0, 74.44444444444443], [687.0, 62.42857142857143], [685.0, 65.66666666666667], [683.0, 60.81632653061224], [675.0, 28.076335877862594], [699.0, 55.16129032258064], [697.0, 14.75], [679.0, 16.776119402985074], [701.0, 53.85714285714286], [703.0, 193.8], [689.0, 60.75], [691.0, 66.92857142857144], [693.0, 167.81818181818178], [695.0, 61.58974358974358], [681.0, 57.447368421052616], [709.0, 143.75], [711.0, 122.46428571428571], [705.0, 131.6875], [719.0, 137.92857142857144], [717.0, 41.300000000000004], [707.0, 56.35294117647059], [735.0, 82.11363636363636], [733.0, 27.71428571428571], [731.0, 196.0], [729.0, 40.52307692307691], [723.0, 57.75925925925926], [725.0, 59.90196078431374], [727.0, 92.44999999999999], [713.0, 22.708333333333336], [715.0, 92.0], [743.0, 118.23529411764704], [739.0, 79.84848484848483], [751.0, 189.30434782608697], [749.0, 181.21428571428572], [737.0, 51.91666666666666], [741.0, 39.094339622641506], [753.0, 47.49999999999999], [767.0, 85.38888888888887], [763.0, 126.30555555555554], [765.0, 15.375], [761.0, 24.437499999999996], [755.0, 151.7], [757.0, 121.04545454545455], [759.0, 132.2083333333333], [747.0, 47.12499999999999], [745.0, 16.625], [771.0, 42.14285714285714], [769.0, 42.109374999999986], [783.0, 106.14634146341463], [781.0, 118.35087719298248], [779.0, 155.5], [773.0, 136.33333333333334], [775.0, 168.63636363636363], [795.0, 21.864864864864863], [793.0, 16.0], [797.0, 41.18333333333334], [799.0, 28.62962962962963], [785.0, 138.57142857142858], [787.0, 69.33333333333334], [791.0, 117.90000000000003], [789.0, 18.44186046511628], [777.0, 70.125], [803.0, 72.39999999999999], [815.0, 33.941176470588246], [813.0, 30.5625], [801.0, 138.64285714285717], [805.0, 151.21428571428572], [807.0, 41.9090909090909], [829.0, 134.75675675675677], [831.0, 17.0], [827.0, 28.066666666666674], [825.0, 81.795918367347], [817.0, 51.15], [819.0, 160.875], [821.0, 95.0], [823.0, 54.307692307692314], [809.0, 184.48000000000002], [811.0, 20.46153846153846], [837.0, 37.71428571428572], [835.0, 37.0625], [833.0, 17.666666666666668], [843.0, 34.48275862068965], [847.0, 78.18918918918918], [845.0, 56.04761904761906], [839.0, 85.73684210526316], [857.0, 85.28571428571429], [859.0, 67.15094339622641], [861.0, 76.3], [863.0, 119.30000000000001], [849.0, 50.25], [851.0, 97.25], [853.0, 33.45794392523366], [855.0, 19.61290322580645], [841.0, 89.83333333333334], [871.0, 45.53191489361703], [865.0, 70.84615384615385], [879.0, 169.5], [869.0, 172.0], [867.0, 21.928571428571427], [895.0, 41.625], [893.0, 96.51515151515152], [891.0, 162.0], [889.0, 47.25714285714286], [881.0, 131.16666666666666], [883.0, 120.59374999999997], [885.0, 145.06666666666666], [887.0, 142.52941176470586], [875.0, 166.1578947368421], [873.0, 22.0], [877.0, 171.36666666666667], [899.0, 134.4210526315789], [911.0, 204.76], [907.0, 31.41666666666667], [905.0, 19.388888888888886], [909.0, 21.77777777777778], [897.0, 187.47727272727272], [901.0, 36.794117647058826], [903.0, 74.86792452830188], [927.0, 59.615384615384635], [925.0, 19.027777777777782], [923.0, 19.2], [921.0, 18.6], [913.0, 195.97777777777776], [917.0, 240.0], [915.0, 21.34042553191489], [919.0, 19.125], [953.0, 63.5], [931.0, 37.529411764705884], [929.0, 62.31578947368422], [943.0, 19.933333333333334], [941.0, 21.0], [939.0, 20.437499999999996], [937.0, 21.058823529411768], [935.0, 113.42857142857142], [933.0, 21.807017543859654], [955.0, 173.78571428571425], [957.0, 37.26315789473684], [959.0, 159.46666666666667], [945.0, 20.0], [947.0, 143.20000000000002], [949.0, 55.59999999999999], [951.0, 23.206349206349202], [963.0, 135.8625], [975.0, 30.471910112359556], [973.0, 171.88235294117646], [971.0, 41.74285714285714], [961.0, 33.166666666666664], [965.0, 24.95555555555556], [967.0, 88.88235294117646], [991.0, 140.99999999999997], [989.0, 26.12727272727273], [987.0, 94.06], [985.0, 157.0], [977.0, 133.66666666666666], [979.0, 137.33333333333331], [981.0, 167.39999999999998], [983.0, 74.38888888888889], [969.0, 89.51851851851855], [995.0, 150.89285714285717], [1007.0, 44.5810810810811], [1005.0, 162.00000000000003], [1003.0, 172.2], [993.0, 41.947368421052644], [997.0, 96.5686274509804], [999.0, 92.82926829268291], [1023.0, 72.87500000000001], [1021.0, 45.00000000000001], [1019.0, 86.15384615384616], [1017.0, 132.70833333333334], [1009.0, 47.12121212121214], [1011.0, 124.00000000000004], [1013.0, 113.88888888888891], [1015.0, 52.66666666666668], [1001.0, 45.33333333333333], [1030.0, 109.00000000000001], [1026.0, 150.0], [1054.0, 82.69696969696969], [1050.0, 113.95744680851062], [1046.0, 103.9666666666667], [1042.0, 147.88888888888889], [1034.0, 76.5], [1038.0, 29.555555555555568], [1078.0, 91.94999999999999], [1074.0, 72.72727272727272], [1058.0, 153.19607843137254], [1086.0, 26.166666666666668], [1082.0, 26.5], [1062.0, 125.38461538461537], [1066.0, 138.0], [1070.0, 42.771186440677965], [1098.0, 93.5], [1094.0, 37.78260869565217], [1090.0, 27.5], [1118.0, 64.67826086956518], [1114.0, 55.281690140845065], [1110.0, 79.83783783783784], [1106.0, 42.5], [1102.0, 77.33333333333334], [1150.0, 62.945652173913075], [1146.0, 33.485981308411226], [1142.0, 48.21153846153847], [1138.0, 43.324324324324344], [1122.0, 35.93283582089554], [1126.0, 44.16470588235293], [1130.0, 46.684210526315795], [1134.0, 53.978260869565204], [1158.0, 56.0], [1154.0, 39.52564102564103], [1182.0, 39.931034482758626], [1178.0, 65.67441860465117], [1174.0, 44.00000000000001], [1170.0, 52.53571428571428], [1162.0, 41.15887850467288], [1166.0, 59.576271186440685], [1210.0, 58.853333333333346], [1214.0, 27.153846153846153], [1206.0, 50.73584905660378], [1202.0, 39.121212121212125], [1186.0, 65.46031746031744], [1190.0, 60.03030303030308], [1194.0, 27.56410256410256], [1198.0, 55.57575757575758], [1274.0, 72.93478260869564], [1242.0, 40.578947368421055], [1246.0, 25.052631578947366], [1218.0, 25.28125], [1222.0, 52.09345794392522], [1234.0, 39.70491803278687], [1238.0, 24.428571428571427], [1250.0, 98.5230769230769], [1254.0, 57.97580645161288], [1262.0, 27.28571428571429], [1258.0, 29.000000000000004], [1278.0, 41.199999999999996], [1270.0, 39.3], [1266.0, 40.684210526315795], [1230.0, 26.285714285714285], [1226.0, 25.617021276595743], [1338.0, 54.56756756756757], [1290.0, 41.151515151515156], [1294.0, 39.0], [1282.0, 67.53906249999999], [1286.0, 43.148148148148145], [1342.0, 31.38888888888889], [1334.0, 33.44000000000001], [1330.0, 60.531914893617035], [1314.0, 90.94174757281547], [1318.0, 42.92857142857143], [1322.0, 86.4175824175824], [1326.0, 45.57142857142857], [1306.0, 63.28358208955225], [1302.0, 39.16666666666667], [1298.0, 39.0], [1310.0, 63.826530612244895], [1358.0, 87.33333333333334], [1350.0, 90.71544715447156], [1374.0, 131.22368421052633], [1346.0, 35.0], [1370.0, 114.08333333333333], [1354.0, 43.01785714285713], [1378.0, 85.30188679245279], [1406.0, 88.51515151515152], [1398.0, 63.46153846153851], [1402.0, 76.2222222222222], [1394.0, 36.033333333333324], [1382.0, 128.57142857142853], [1386.0, 46.130434782608695], [1390.0, 126.42372881355922], [1362.0, 64.94230769230771], [1366.0, 144.85393258426961], [1414.0, 69.3125], [1410.0, 31.0], [1434.0, 33.666666666666664], [1438.0, 31.296296296296298], [1430.0, 66.5], [1418.0, 72.60714285714286], [1422.0, 104.74698795180721], [1458.0, 61.84848484848489], [1462.0, 36.84615384615385], [1466.0, 81.51685393258428], [1470.0, 95.04065040650408], [1446.0, 30.40350877192982], [1442.0, 28.466666666666665], [1450.0, 82.85294117647058], [1454.0, 112.21621621621624], [1426.0, 35.0], [1478.0, 120.96153846153847], [1474.0, 74.625], [1502.0, 87.56521739130433], [1498.0, 42.297709923664115], [1482.0, 33.15384615384615], [1486.0, 49.13333333333333], [1522.0, 68.93750000000001], [1526.0, 70.15384615384615], [1530.0, 25.684210526315788], [1534.0, 26.363636363636367], [1506.0, 64.02631578947368], [1510.0, 63.88235294117648], [1514.0, 55.45370370370374], [1518.0, 81.79487179487181], [1490.0, 32.666666666666664], [1494.0, 58.54098360655737], [1546.0, 29.0], [1562.0, 69.025], [1538.0, 26.36], [1542.0, 24.5], [1550.0, 24.0], [1586.0, 64.15151515151517], [1590.0, 60.82291666666667], [1594.0, 100.71929824561404], [1598.0, 73.55900621118008], [1554.0, 80.00000000000001], [1558.0, 43.35593220338984], [1566.0, 112.75789473684212], [1570.0, 86.06666666666666], [1574.0, 85.68750000000001], [1578.0, 140.6115107913669], [1582.0, 27.6875], [1610.0, 52.662337662337656], [1654.0, 41.54000000000002], [1626.0, 74.96039603960399], [1602.0, 23.687500000000007], [1606.0, 62.05194805194804], [1614.0, 76.39726027397263], [1650.0, 38.15625], [1662.0, 125.20000000000002], [1618.0, 58.55284552845529], [1622.0, 75.7471264367816], [1630.0, 46.0945945945946], [1634.0, 55.590361445783124], [1638.0, 100.00000000000003], [1642.0, 41.53846153846154], [1646.0, 53.82539682539683], [1666.0, 45.81547619047621], [1670.0, 88.25842696629213], [1694.0, 45.43478260869566], [1690.0, 47.0], [1686.0, 39.86666666666667], [1674.0, 43.04347826086956], [1682.0, 77.73333333333335], [1706.0, 76.86567164179105], [1702.0, 43.8235294117647], [1698.0, 42.44444444444444], [1722.0, 137.5272727272727], [1726.0, 39.281250000000014], [1718.0, 95.30508474576266], [1714.0, 97.59541984732827], [1678.0, 45.42424242424242], [1710.0, 54.564516129032235], [1742.0, 45.43999999999999], [1782.0, 101.8679245283019], [1730.0, 141.8627450980392], [1734.0, 44.0], [1738.0, 44.65789473684211], [1778.0, 46.0], [1790.0, 42.24999999999999], [1786.0, 46.71428571428571], [1746.0, 45.61904761904763], [1750.0, 44.22047244094487], [1754.0, 87.04999999999998], [1758.0, 41.642857142857146], [1762.0, 101.3181818181818], [1766.0, 98.8125], [1774.0, 46.02439024390244], [1770.0, 44.8], [1798.0, 95.5333333333334], [1794.0, 41.16666666666667], [1822.0, 66.78260869565219], [1818.0, 93.90909090909093], [1814.0, 145.0], [1802.0, 115.68965517241378], [1806.0, 126.0147058823529], [1842.0, 34.241379310344826], [1846.0, 80.33812949640284], [1850.0, 44.45714285714288], [1854.0, 45.611111111111114], [1826.0, 132.38636363636365], [1830.0, 41.935483870967744], [1834.0, 201.28301886792448], [1838.0, 74.10344827586205], [1810.0, 62.14814814814815], [1906.0, 84.84615384615381], [1862.0, 82.19327731092436], [1866.0, 45.875], [1870.0, 47.16666666666667], [1910.0, 63.94623655913979], [1914.0, 49.42857142857143], [1918.0, 63.60000000000001], [1890.0, 48.07364341085276], [1874.0, 64.65671641791043], [1878.0, 50.68750000000001], [1882.0, 75.3108108108108], [1886.0, 53.24444444444446], [1858.0, 46.54545454545454], [1894.0, 125.3953488372093], [1898.0, 84.4], [1902.0, 47.18518518518518], [1930.0, 50.95454545454545], [1946.0, 76.58620689655172], [1926.0, 53.53488372093025], [1922.0, 46.75], [1950.0, 53.78658536585363], [1934.0, 53.67326732673267], [1978.0, 14.288135593220337], [1974.0, 16.418867924528296], [1970.0, 25.599999999999998], [1982.0, 208.83931278423452], [1954.0, 43.56164383561646], [1962.0, 24.78571428571429], [1958.0, 31.076923076923077], [1966.0, 27.657894736842103], [1938.0, 45.13725490196079], [1942.0, 81.0424028268552], [1986.0, 63.35928143712576], [1998.0, 47.63979057591621], [1994.0, 42.54836464857343], [1990.0, 37.77089783281734], [1031.0, 126.15217391304341], [1035.0, 64.6794871794872], [1027.0, 100.52173913043475], [1055.0, 51.56666666666666], [1051.0, 129.7333333333333], [1047.0, 72.59523809523812], [1043.0, 50.508196721311506], [1039.0, 33.18181818181819], [1079.0, 26.818181818181817], [1075.0, 105.08333333333331], [1059.0, 151.25], [1087.0, 27.5], [1083.0, 26.632911392405063], [1063.0, 91.00000000000001], [1067.0, 36.22222222222222], [1071.0, 64.95348837209303], [1099.0, 93.33333333333333], [1095.0, 41.31521739130435], [1091.0, 26.125], [1111.0, 99.87878787878788], [1119.0, 63.92105263157894], [1115.0, 58.677966101694935], [1107.0, 65.29245283018865], [1103.0, 43.71604938271606], [1151.0, 54.05660377358491], [1147.0, 43.65671641791047], [1143.0, 49.921875], [1139.0, 58.360655737704924], [1123.0, 48.88888888888889], [1127.0, 49.75833333333333], [1135.0, 53.42857142857143], [1131.0, 24.14035087719298], [1155.0, 27.000000000000004], [1159.0, 38.05555555555555], [1179.0, 38.509433962264154], [1175.0, 41.99999999999999], [1171.0, 49.39999999999999], [1183.0, 36.879999999999995], [1163.0, 39.95833333333334], [1167.0, 51.63291139240507], [1211.0, 36.621621621621614], [1215.0, 27.25], [1207.0, 64.71052631578948], [1203.0, 38.36559139784946], [1187.0, 70.61538461538461], [1191.0, 58.25490196078431], [1195.0, 56.66666666666668], [1199.0, 59.61538461538462], [1227.0, 53.43877551020409], [1243.0, 37.81250000000001], [1247.0, 28.64], [1223.0, 29.88489208633093], [1219.0, 27.04878048780488], [1231.0, 56.15624999999996], [1267.0, 38.6], [1271.0, 92.48571428571428], [1279.0, 87.59999999999998], [1275.0, 41.46153846153846], [1251.0, 56.30379746835445], [1255.0, 36.725274725274716], [1263.0, 28.833333333333332], [1259.0, 29.108695652173914], [1235.0, 44.81818181818183], [1239.0, 59.460317460317455], [1287.0, 94.55172413793103], [1283.0, 71.21839080459772], [1331.0, 64.56250000000004], [1295.0, 39.22727272727272], [1291.0, 38.92857142857142], [1339.0, 44.75000000000002], [1335.0, 30.571428571428573], [1343.0, 33.16666666666666], [1303.0, 50.89320388349514], [1307.0, 64.75949367088607], [1311.0, 86.16352201257857], [1315.0, 48.842105263157904], [1319.0, 62.17647058823531], [1323.0, 33.225806451612904], [1327.0, 33.42857142857143], [1351.0, 34.857142857142854], [1347.0, 56.04580152671758], [1367.0, 88.05405405405405], [1375.0, 141.31481481481484], [1371.0, 94.4705882352941], [1359.0, 117.08333333333333], [1355.0, 35.30434782608695], [1395.0, 96.41250000000005], [1399.0, 69.10937499999997], [1403.0, 78.84375000000003], [1407.0, 48.602409638554214], [1379.0, 156.71153846153848], [1383.0, 32.083333333333336], [1387.0, 35.84375], [1391.0, 91.22388059701494], [1363.0, 76.06666666666666], [1415.0, 30.541176470588233], [1459.0, 37.66666666666667], [1411.0, 31.01492537313434], [1439.0, 29.4], [1435.0, 32.6], [1419.0, 68.07692307692308], [1423.0, 34.088435374149675], [1427.0, 89.38095238095238], [1431.0, 82.82278481012659], [1443.0, 28.749999999999996], [1471.0, 36.80434782608697], [1467.0, 78.60000000000001], [1463.0, 114.29629629629625], [1447.0, 104.26190476190479], [1451.0, 124.58823529411767], [1455.0, 102.83333333333333], [1479.0, 79.20833333333331], [1503.0, 68.3095238095238], [1499.0, 56.099999999999994], [1495.0, 95.0], [1475.0, 75.84615384615394], [1483.0, 130.48148148148147], [1487.0, 78.49090909090906], [1531.0, 24.5], [1535.0, 65.46428571428571], [1527.0, 56.2], [1523.0, 40.555555555555564], [1507.0, 58.31034482758619], [1511.0, 41.939999999999976], [1515.0, 74.75862068965515], [1519.0, 77.0392156862745], [1491.0, 32.66666666666668], [1567.0, 99.66666666666669], [1559.0, 31.136363636363637], [1555.0, 91.95774647887322], [1563.0, 126.86956521739131], [1599.0, 62.16153846153847], [1595.0, 53.39682539682536], [1591.0, 51.87323943661974], [1551.0, 26.0], [1547.0, 22.428571428571427], [1543.0, 25.0], [1539.0, 24.875], [1587.0, 28.999999999999996], [1571.0, 96.70512820512818], [1575.0, 64.24137931034481], [1579.0, 102.06666666666665], [1583.0, 43.45217391304349], [1611.0, 142.25641025641025], [1655.0, 42.639344262295076], [1627.0, 75.07758620689658], [1607.0, 52.0], [1603.0, 24.538461538461537], [1615.0, 31.081081081081084], [1651.0, 36.714285714285715], [1659.0, 57.90909090909092], [1663.0, 55.508771929824555], [1619.0, 75.78571428571428], [1623.0, 38.433962264150935], [1631.0, 84.31325301204818], [1635.0, 64.78749999999998], [1639.0, 49.519480519480524], [1643.0, 38.27777777777777], [1647.0, 38.514285714285705], [1671.0, 83.3529411764706], [1679.0, 127.53125000000001], [1695.0, 46.46153846153846], [1691.0, 41.57142857142857], [1687.0, 40.48484848484848], [1667.0, 54.34090909090908], [1675.0, 44.879999999999995], [1707.0, 77.2335766423358], [1715.0, 66.35593220338978], [1719.0, 101.86170212765951], [1723.0, 85.92248062015511], [1727.0, 38.90196078431373], [1703.0, 43.846153846153854], [1699.0, 43.666666666666664], [1711.0, 42.95000000000002], [1683.0, 53.963503649635044], [1743.0, 87.70114942528734], [1731.0, 149.65625], [1735.0, 43.826086956521735], [1739.0, 45.083333333333336], [1779.0, 102.65116279069764], [1783.0, 98.66666666666669], [1787.0, 43.31666666666665], [1791.0, 41.62499999999999], [1747.0, 45.500000000000014], [1751.0, 70.948051948052], [1755.0, 41.41379310344828], [1759.0, 41.74074074074074], [1763.0, 78.6421052631579], [1767.0, 43.487179487179496], [1771.0, 45.95348837209304], [1775.0, 85.28787878787878], [1807.0, 58.983739837398396], [1799.0, 138.61344537815134], [1795.0, 40.333333333333336], [1823.0, 41.8878504672897], [1819.0, 51.4390243902439], [1803.0, 53.89285714285715], [1851.0, 46.285714285714285], [1855.0, 45.5], [1847.0, 106.79611650485434], [1843.0, 42.68000000000001], [1827.0, 51.29090909090909], [1831.0, 181.74074074074076], [1835.0, 47.51340996168583], [1839.0, 39.67346938775511], [1811.0, 60.418181818181814], [1815.0, 44.55555555555555], [1867.0, 45.79999999999999], [1863.0, 58.69421487603306], [1879.0, 53.718309859154935], [1859.0, 47.17142857142858], [1887.0, 86.6363636363636], [1871.0, 63.534351145038165], [1907.0, 93.90972222222221], [1911.0, 63.34374999999999], [1915.0, 46.70967741935484], [1919.0, 55.45238095238099], [1891.0, 47.23762376237623], [1895.0, 102.9090909090909], [1903.0, 47.26785714285714], [1875.0, 92.59259259259258], [1883.0, 80.06896551724144], [1935.0, 45.03333333333334], [1931.0, 82.8924731182796], [1927.0, 68.24742268041236], [1951.0, 47.08823529411765], [1923.0, 49.86842105263158], [1971.0, 30.717391304347814], [1975.0, 14.858585858585856], [1979.0, 58.11688311688311], [1983.0, 43.824242424242456], [1955.0, 41.86249999999998], [1959.0, 31.829059829059837], [1963.0, 48.96721311475412], [1967.0, 101.25], [1939.0, 45.414634146341456], [1943.0, 89.4090909090909], [1947.0, 64.51754385964914], [1999.0, 53.31325301204826], [1995.0, 43.048426150121074], [1991.0, 33.459770114942536], [1987.0, 33.431421446384036], [1.0, 1.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1861.824149999993, 63.90239000000201]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 678776.6666666666, "minX": 1.58524542E12, "maxY": 813333.3333333334, "series": [{"data": [[1.58524542E12, 678776.6666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58524542E12, 813333.3333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58524542E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 63.90239000000201, "minX": 1.58524542E12, "maxY": 63.90239000000201, "series": [{"data": [[1.58524542E12, 63.90239000000201]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58524542E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 63.897100000000826, "minX": 1.58524542E12, "maxY": 63.897100000000826, "series": [{"data": [[1.58524542E12, 63.897100000000826]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58524542E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2.65179000000006, "minX": 1.58524542E12, "maxY": 2.65179000000006, "series": [{"data": [[1.58524542E12, 2.65179000000006]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58524542E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.58524542E12, "maxY": 7129.0, "series": [{"data": [[1.58524542E12, 7129.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58524542E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58524542E12, 25.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58524542E12, 29.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58524542E12, 26.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58524542E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 17.0, "minX": 505.0, "maxY": 187.0, "series": [{"data": [[33894.0, 46.0], [35229.0, 38.0], [41132.0, 48.0], [42231.0, 44.0], [11002.0, 91.0], [44546.0, 47.0], [43735.0, 49.0], [3159.0, 187.0], [13792.0, 100.0], [16531.0, 99.0], [18410.0, 84.0], [20423.0, 17.0], [22068.0, 73.0], [25364.0, 66.0], [27979.0, 71.0], [505.0, 175.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44546.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 17.0, "minX": 505.0, "maxY": 187.0, "series": [{"data": [[33894.0, 46.0], [35229.0, 38.0], [41132.0, 48.0], [42231.0, 44.0], [11002.0, 91.0], [44546.0, 47.0], [43735.0, 49.0], [3159.0, 187.0], [13792.0, 100.0], [16531.0, 99.0], [18410.0, 84.0], [20423.0, 17.0], [22068.0, 73.0], [25364.0, 66.0], [27979.0, 71.0], [505.0, 175.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44546.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6666.666666666667, "minX": 1.58524542E12, "maxY": 6666.666666666667, "series": [{"data": [[1.58524542E12, 6666.666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58524542E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6666.666666666667, "minX": 1.58524542E12, "maxY": 6666.666666666667, "series": [{"data": [[1.58524542E12, 6666.666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58524542E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 6666.666666666667, "minX": 1.58524542E12, "maxY": 6666.666666666667, "series": [{"data": [[1.58524542E12, 6666.666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58524542E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6666.666666666667, "minX": 1.58524542E12, "maxY": 6666.666666666667, "series": [{"data": [[1.58524542E12, 6666.666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58524542E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

